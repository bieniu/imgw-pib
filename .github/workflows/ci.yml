name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  prepare:
    name: Prepare environment
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        python-version:
          - "3.12"
          - "3.13"
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Restore Python virtual environment
        id: cache-venv
        uses: actions/cache@v4.2.0
        with:
          path: venv
          key: ${{ runner.os }}-${{ matrix.python-version }}
      - name: Create Python virtual environment
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          pip install uv
          uv venv --python ${{ matrix.python-version }} venv
          source venv/bin/activate
          uv pip install -r requirements-test.txt
  lint-ruff:
    name: Check ruff
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        python-version:
          - "3.12"
          - "3.13"
    needs:
      - prepare
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Restore Python virtual environment
        id: cache-venv
        uses: actions/cache/restore@v4.2.0
        with:
          path: venv
          fail-on-cache-miss: true
          key: ${{ runner.os }}-${{ matrix.python-version }}
      - name: Run ruff
        run: |
          source venv/bin/activate
          ruff check .
        env:
          RUFF_OUTPUT_FORMAT: github
  lint-ruff-format:
    name: Check ruff-format
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        python-version:
          - "3.13"
    needs:
      - prepare
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Restore Python virtual environment
        id: cache-venv
        uses: actions/cache/restore@v4.2.0
        with:
          path: venv
          fail-on-cache-miss: true
          key: ${{ runner.os }}-${{ matrix.python-version }}
      - name: Run ruff-format
        run: |
          source venv/bin/activate
          ruff format --check .
        env:
          RUFF_OUTPUT_FORMAT: github
  mypy:
    name: Check mypy
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        python-version:
          - "3.13"
    needs:
      - prepare
      - lint-ruff
      - lint-ruff-format
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Restore Python virtual environment
        id: cache-venv
        uses: actions/cache/restore@v4.2.0
        with:
          path: venv
          fail-on-cache-miss: true
          key: ${{ runner.os }}-${{ matrix.python-version }}
      - name: Run mypy
        run: |
          source venv/bin/activate
          mypy imgw_pib
  pytest:
    runs-on: ubuntu-24.04-arm
    strategy:
      matrix:
        python-version:
          - "3.12"
          - "3.13"
    name: Run tests Python ${{ matrix.python-version }}
    needs:
      - prepare
      - lint-ruff
      - lint-ruff-format
      - mypy
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Restore Python virtual environment
        id: cache-venv
        uses: actions/cache/restore@v4.2.0
        with:
          path: venv
          fail-on-cache-miss: true
          key: ${{ runner.os }}-${{ matrix.python-version }}
      - name: Run pytest
        run: |
          source venv/bin/activate
          pytest --timeout=30 --cov=imgw_pib --cov-report=xml --error-for-skips
          coverage report --fail-under=80
